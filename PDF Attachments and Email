package com.my.appname;
 
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import androidx.core.view.GravityCompat;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.appcompat.app.ActionBarDrawerToggle;
import android.widget.LinearLayout;
import android.app.*;
import android.os.*;
import android.view.*;
import android.view.View.*;
import android.widget.*;
import android.content.*;
import android.graphics.*;
import android.media.*;
import android.net.*;
import android.text.*;
import android.util.*;
import android.webkit.*;
import android.animation.*;
import android.view.animation.*;
import java.util.*;
import java.text.*;
import java.util.ArrayList;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Button;
import android.content.Intent;
import android.net.Uri;
import android.content.ClipData;
import android.view.View;
import androidx.core.content.ContextCompat;
import androidx.core.app.ActivityCompat;
import android.Manifest;
import android.content.pm.PackageManager;
 
public class SaveAndShareActivity extends AppCompatActivity {
   
    public final int REQ_CD_FILEPICKER = 101;
   
    private Toolbar _toolbar;
    private FloatingActionButton _fab;
    private DrawerLayout _drawer;
    private String file = "";
   
    private ArrayList<String> fileget = new ArrayList<>();
   
    private LinearLayout linear1;
    private ImageView imageview1;
    private TextView textview1;
    private Button button2;
    private Button button1;
    private ImageView imageview2;
    private LinearLayout _drawer_linear1;
    private ImageView _drawer_imageview1;
    private Button _drawer_b4btn;
    private Button _drawer_clientbtn;
    private Button _drawer_cstbtn;
    private Button _drawer_msclleftbtn;
    private Button _drawer_msclrghtbtn;
    private Button _drawer_msclrearbtn;
    private Button _drawer_afterbtn;
    private Button _drawer_policiesbtn;
   
    private Intent fab = new Intent();
    private Intent drawer = new Intent();
    private Intent web = new Intent();
    private Intent filepicker = new Intent(Intent.ACTION_GET_CONTENT);
    private Intent mail = new Intent();
    private Intent shareviews = new Intent();
    @Override
    protected void onCreate(Bundle _savedInstanceState) {
        super.onCreate(_savedInstanceState);
        setContentView(R.layout.save_and_share);
        com.google.firebase.FirebaseApp.initializeApp(this);
        initialize(_savedInstanceState);
        if (ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_DENIED) {
            ActivityCompat.requestPermissions(this, new String[] {Manifest.permission.READ_EXTERNAL_STORAGE}, 1000);
        }
        else {
            initializeLogic();
        }
    }
    @Override
    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == 1000) {
            initializeLogic();
        }
    }
   
    private void initialize(Bundle _savedInstanceState) {
       
        _toolbar = (Toolbar) findViewById(R.id._toolbar);
        setSupportActionBar(_toolbar);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setHomeButtonEnabled(true);
        _toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _v) {
                onBackPressed();
            }
        });
        _fab = (FloatingActionButton) findViewById(R.id._fab);
       
        _drawer = (DrawerLayout) findViewById(R.id._drawer);ActionBarDrawerToggle _toggle = new ActionBarDrawerToggle(SaveAndShareActivity.this, _drawer, _toolbar, R.string.app_name, R.string.app_name);
        _drawer.addDrawerListener(_toggle);
        _toggle.syncState();
       
        LinearLayout _nav_view = (LinearLayout) findViewById(R.id._nav_view);
       
        linear1 = (LinearLayout) findViewById(R.id.linear1);
        imageview1 = (ImageView) findViewById(R.id.imageview1);
        textview1 = (TextView) findViewById(R.id.textview1);
        button2 = (Button) findViewById(R.id.button2);
        button1 = (Button) findViewById(R.id.button1);
        imageview2 = (ImageView) findViewById(R.id.imageview2);
        _drawer_linear1 = (LinearLayout) _nav_view.findViewById(R.id.linear1);
        _drawer_imageview1 = (ImageView) _nav_view.findViewById(R.id.imageview1);
        _drawer_b4btn = (Button) _nav_view.findViewById(R.id.b4btn);
        _drawer_clientbtn = (Button) _nav_view.findViewById(R.id.clientbtn);
        _drawer_cstbtn = (Button) _nav_view.findViewById(R.id.cstbtn);
        _drawer_msclleftbtn = (Button) _nav_view.findViewById(R.id.msclleftbtn);
        _drawer_msclrghtbtn = (Button) _nav_view.findViewById(R.id.msclrghtbtn);
        _drawer_msclrearbtn = (Button) _nav_view.findViewById(R.id.msclrearbtn);
        _drawer_afterbtn = (Button) _nav_view.findViewById(R.id.afterbtn);
        _drawer_policiesbtn = (Button) _nav_view.findViewById(R.id.policiesbtn);
        filepicker.setType("*/*");
        filepicker.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);
       
        linear1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
               
            }
        });
       
        button2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                imageview2.setImageBitmap(FileUtil.decodeSampleBitmapFromPath("/storage/0/Android/com.my.appname/cache/filename.pdf", 1024, 1024));
            }
        });
       
        button1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                _pdfify();
            }
        });
       
        _fab.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                fab.setClass(getApplicationContext(), MainActivity.class);
                startActivity(fab);
            }
        });
       
        _drawer_b4btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                drawer.setClass(getApplicationContext(), MainActivity.class);
                startActivity(drawer);
            }
        });
       
        _drawer_clientbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                drawer.setClass(getApplicationContext(), ClientInfoActivity.class);
                startActivity(drawer);
            }
        });
       
        _drawer_cstbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                drawer.setClass(getApplicationContext(), MuscleCanvasActivity.class);
                startActivity(drawer);
            }
        });
       
        _drawer_msclleftbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                drawer.setClass(getApplicationContext(), ActualMuscleCanvasActivity.class);
                startActivity(drawer);
            }
        });
       
        _drawer_msclrghtbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                drawer.setClass(getApplicationContext(), MuscleAlternativeActivity.class);
                startActivity(drawer);
            }
        });
       
        _drawer_msclrearbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                drawer.setClass(getApplicationContext(), MuscleRearActivity.class);
                startActivity(drawer);
            }
        });
       
        _drawer_afterbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                drawer.setClass(getApplicationContext(), AfterTreatmentActivity.class);
                startActivity(drawer);
            }
        });
       
        _drawer_policiesbtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View _view) {
                web.setAction(Intent.ACTION_VIEW);
                web.setData(Uri.parse("https://"));
                startActivity(web);
            }
        });
    }
    private void initializeLogic() {
        _hide_navigation_bar();
    }
   
    @Override
    protected void onActivityResult(int _requestCode, int _resultCode, Intent _data) {
        super.onActivityResult(_requestCode, _resultCode, _data);
       
        switch (_requestCode) {
           
            default:
            break;
        }
    }
   
    @Override
    public void onBackPressed() {
        if (_drawer.isDrawerOpen(GravityCompat.START)) {
            _drawer.closeDrawer(GravityCompat.START);
        }
        else {
            super.onBackPressed();
        }
    }
    private void _hide_navigation_bar () {
        getWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
    }
   
   
    private void _pdfify () {
        mail.setAction(Intent.ACTION_VIEW);
        mail.setData(Uri.parse("mailto:"));
        mail.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new java.io.File(Environment.getExternalStorageDirectory() +"/Documents/filename.pdf")));
        mail.putExtra("subject", "email subject");
        mail.putExtra("body", "Thanks");
        startActivity(mail);
    }
   
   
    @Deprecated
    public void showMessage(String _s) {
        Toast.makeText(getApplicationContext(), _s, Toast.LENGTH_SHORT).show();
    }
   
    @Deprecated
    public int getLocationX(View _v) {
        int _location[] = new int[2];
        _v.getLocationInWindow(_location);
        return _location[0];
    }
   
    @Deprecated
    public int getLocationY(View _v) {
        int _location[] = new int[2];
        _v.getLocationInWindow(_location);
        return _location[1];
    }
   
    @Deprecated
    public int getRandom(int _min, int _max) {
        Random random = new Random();
        return random.nextInt(_max - _min + 1) + _min;
    }
   
    @Deprecated
    public ArrayList<Double> getCheckedItemPositionsToArray(ListView _list) {
        ArrayList<Double> _result = new ArrayList<Double>();
        SparseBooleanArray _arr = _list.getCheckedItemPositions();
        for (int _iIdx = 0; _iIdx < _arr.size(); _iIdx++) {
            if (_arr.valueAt(_iIdx))
            _result.add((double)_arr.keyAt(_iIdx));
        }
        return _result;
    }
   
    @Deprecated
    public float getDip(int _input){
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, _input, getResources().getDisplayMetrics());
    }
   
    @Deprecated
    public int getDisplayWidthPixels(){
        return getResources().getDisplayMetrics().widthPixels;
    }
   
    @Deprecated
    public int getDisplayHeightPixels(){
        return getResources().getDisplayMetrics().heightPixels;
    }
   
}
